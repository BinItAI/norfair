name: CI

on:
  push:
    branches: master
  pull_request:
    branches: master
  release:
    types: [published]

jobs:
  #
  # Builds our package and runs the tests under supported
  # versions of Python.
  #
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Run tests
        run: |
          pip install --upgrade pip
          pip install .
          pytest -s tests/

  mot-metrics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Run tests
        run: |
          pip install --upgrade pip
          pip install .[metrics]
          wget -nc https://motchallenge.net/data/MOT17Labels.zip
          unzip MOT17Labels.zip
          python tests/mot_metrics.py

  #
  # Build & upload release to PyPI.
  #
  # Executed only if GitHub release is "published".
  #
  release:
    runs-on: ubuntu-latest
    needs: [unit-tests, mot-metrics]
    if: github.event_name == 'release'
    env:
      PYTHON_VERSION: 3.8
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Release to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config -n pypi-token.pypi "$PYPI_TOKEN"
          poetry publish --build -n
